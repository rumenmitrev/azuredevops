trigger:
- main

pool: laptop

stages:
- stage: Build
  displayName: 'Build Stage'
  jobs:
  - job: BuildJob
    displayName: 'Build Job'
    steps:
    - powershell: |
        az login --service-principal -u $(client_id) -p $(client_secret) --tenant $(tenant_id)
        terraform.exe --version
        terraform init
        terraform plan -out=tfplan
      env:
        PATH: 'C:\terraform;$(PATH)'
        TF_VAR_client_secret: $(client_secret)
        TF_VAR_location: $(location)
        TF_VAR_subscription_id: $(subscription_id)
        TF_VAR_tenant_id: $(tenant_id)
        TF_VAR_client_id: $(client_id)
      displayName: 'Check Terraform Version'
    - publish: tfplan
      artifact: terraformplan

- stage: Apply
  displayName: 'Terraform Apply'
  dependsOn: Build
  jobs:
  - job: ApplyJob
    displayName: 'Run terraform apply'
    steps:
    - download: current
      artifact: terraformplan
    - powershell: |
        az login --service-principal -u $(client_id) -p $(client_secret) --tenant $(tenant_id)
        terraform.exe apply -auto-approve "$(Pipeline.Workspace)/terraformplan/tfplan"
      env:
        PATH: 'C:\terraform;$(PATH)'
        TF_VAR_client_secret: $(client_secret)
        TF_VAR_location: $(location)
        TF_VAR_subscription_id: $(subscription_id)
        TF_VAR_tenant_id: $(tenant_id)
        TF_VAR_client_id: $(client_id)
      displayName: 'Terraform Apply'
- stage: Destroy
  displayName: 'Terraform Destroy'
  dependsOn: Apply
  condition: succeeded()
  jobs:
  - job: DestroyJob
    displayName: 'Run terraform destroy'
    steps:
    - powershell: |
        az login --service-principal -u $(client_id) -p $(client_secret) --tenant $(tenant_id)
        terraform.exe destroy -auto-approve
      env:
        PATH: 'C:\terraform;$(PATH)'
        TF_VAR_client_secret: $(client_secret)
        TF_VAR_location: $(location)
        TF_VAR_subscription_id: $(subscription_id)
        TF_VAR_tenant_id: $(tenant_id)
        TF_VAR_client_id: $(client_id)
      displayName: 'Terraform Destroy'




# - stage: WSL
#   displayName: 'WSL Test'
#   jobs:
#   - job: WSLJob
#     displayName: 'WSL Job'
#     steps:
#     - script: |
#         wsl ps aux
#         wsl pwd
#         wsl ls -sail
#       displayName: 'Run WSL commands'
